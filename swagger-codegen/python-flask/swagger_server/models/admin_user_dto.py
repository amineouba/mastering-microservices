# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
import re  # noqa: F401,E501
from swagger_server import util


class AdminUserDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, login: str=None, first_name: str=None, last_name: str=None, email: str=None, image_url: str=None, activated: bool=None, lang_key: str=None, created_by: str=None, created_date: datetime=None, last_modified_by: str=None, last_modified_date: datetime=None, authorities: List[str]=None):  # noqa: E501
        """AdminUserDTO - a model defined in Swagger

        :param id: The id of this AdminUserDTO.  # noqa: E501
        :type id: int
        :param login: The login of this AdminUserDTO.  # noqa: E501
        :type login: str
        :param first_name: The first_name of this AdminUserDTO.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this AdminUserDTO.  # noqa: E501
        :type last_name: str
        :param email: The email of this AdminUserDTO.  # noqa: E501
        :type email: str
        :param image_url: The image_url of this AdminUserDTO.  # noqa: E501
        :type image_url: str
        :param activated: The activated of this AdminUserDTO.  # noqa: E501
        :type activated: bool
        :param lang_key: The lang_key of this AdminUserDTO.  # noqa: E501
        :type lang_key: str
        :param created_by: The created_by of this AdminUserDTO.  # noqa: E501
        :type created_by: str
        :param created_date: The created_date of this AdminUserDTO.  # noqa: E501
        :type created_date: datetime
        :param last_modified_by: The last_modified_by of this AdminUserDTO.  # noqa: E501
        :type last_modified_by: str
        :param last_modified_date: The last_modified_date of this AdminUserDTO.  # noqa: E501
        :type last_modified_date: datetime
        :param authorities: The authorities of this AdminUserDTO.  # noqa: E501
        :type authorities: List[str]
        """
        self.swagger_types = {
            'id': int,
            'login': str,
            'first_name': str,
            'last_name': str,
            'email': str,
            'image_url': str,
            'activated': bool,
            'lang_key': str,
            'created_by': str,
            'created_date': datetime,
            'last_modified_by': str,
            'last_modified_date': datetime,
            'authorities': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'login': 'login',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'email': 'email',
            'image_url': 'imageUrl',
            'activated': 'activated',
            'lang_key': 'langKey',
            'created_by': 'createdBy',
            'created_date': 'createdDate',
            'last_modified_by': 'lastModifiedBy',
            'last_modified_date': 'lastModifiedDate',
            'authorities': 'authorities'
        }
        self._id = id
        self._login = login
        self._first_name = first_name
        self._last_name = last_name
        self._email = email
        self._image_url = image_url
        self._activated = activated
        self._lang_key = lang_key
        self._created_by = created_by
        self._created_date = created_date
        self._last_modified_by = last_modified_by
        self._last_modified_date = last_modified_date
        self._authorities = authorities

    @classmethod
    def from_dict(cls, dikt) -> 'AdminUserDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AdminUserDTO of this AdminUserDTO.  # noqa: E501
        :rtype: AdminUserDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this AdminUserDTO.


        :return: The id of this AdminUserDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this AdminUserDTO.


        :param id: The id of this AdminUserDTO.
        :type id: int
        """

        self._id = id

    @property
    def login(self) -> str:
        """Gets the login of this AdminUserDTO.


        :return: The login of this AdminUserDTO.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login: str):
        """Sets the login of this AdminUserDTO.


        :param login: The login of this AdminUserDTO.
        :type login: str
        """
        if login is None:
            raise ValueError("Invalid value for `login`, must not be `None`")  # noqa: E501

        self._login = login

    @property
    def first_name(self) -> str:
        """Gets the first_name of this AdminUserDTO.


        :return: The first_name of this AdminUserDTO.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this AdminUserDTO.


        :param first_name: The first_name of this AdminUserDTO.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this AdminUserDTO.


        :return: The last_name of this AdminUserDTO.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this AdminUserDTO.


        :param last_name: The last_name of this AdminUserDTO.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def email(self) -> str:
        """Gets the email of this AdminUserDTO.


        :return: The email of this AdminUserDTO.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this AdminUserDTO.


        :param email: The email of this AdminUserDTO.
        :type email: str
        """

        self._email = email

    @property
    def image_url(self) -> str:
        """Gets the image_url of this AdminUserDTO.


        :return: The image_url of this AdminUserDTO.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url: str):
        """Sets the image_url of this AdminUserDTO.


        :param image_url: The image_url of this AdminUserDTO.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def activated(self) -> bool:
        """Gets the activated of this AdminUserDTO.


        :return: The activated of this AdminUserDTO.
        :rtype: bool
        """
        return self._activated

    @activated.setter
    def activated(self, activated: bool):
        """Sets the activated of this AdminUserDTO.


        :param activated: The activated of this AdminUserDTO.
        :type activated: bool
        """

        self._activated = activated

    @property
    def lang_key(self) -> str:
        """Gets the lang_key of this AdminUserDTO.


        :return: The lang_key of this AdminUserDTO.
        :rtype: str
        """
        return self._lang_key

    @lang_key.setter
    def lang_key(self, lang_key: str):
        """Sets the lang_key of this AdminUserDTO.


        :param lang_key: The lang_key of this AdminUserDTO.
        :type lang_key: str
        """

        self._lang_key = lang_key

    @property
    def created_by(self) -> str:
        """Gets the created_by of this AdminUserDTO.


        :return: The created_by of this AdminUserDTO.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by: str):
        """Sets the created_by of this AdminUserDTO.


        :param created_by: The created_by of this AdminUserDTO.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def created_date(self) -> datetime:
        """Gets the created_date of this AdminUserDTO.


        :return: The created_date of this AdminUserDTO.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date: datetime):
        """Sets the created_date of this AdminUserDTO.


        :param created_date: The created_date of this AdminUserDTO.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def last_modified_by(self) -> str:
        """Gets the last_modified_by of this AdminUserDTO.


        :return: The last_modified_by of this AdminUserDTO.
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by: str):
        """Sets the last_modified_by of this AdminUserDTO.


        :param last_modified_by: The last_modified_by of this AdminUserDTO.
        :type last_modified_by: str
        """

        self._last_modified_by = last_modified_by

    @property
    def last_modified_date(self) -> datetime:
        """Gets the last_modified_date of this AdminUserDTO.


        :return: The last_modified_date of this AdminUserDTO.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date: datetime):
        """Sets the last_modified_date of this AdminUserDTO.


        :param last_modified_date: The last_modified_date of this AdminUserDTO.
        :type last_modified_date: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def authorities(self) -> List[str]:
        """Gets the authorities of this AdminUserDTO.


        :return: The authorities of this AdminUserDTO.
        :rtype: List[str]
        """
        return self._authorities

    @authorities.setter
    def authorities(self, authorities: List[str]):
        """Sets the authorities of this AdminUserDTO.


        :param authorities: The authorities of this AdminUserDTO.
        :type authorities: List[str]
        """

        self._authorities = authorities
